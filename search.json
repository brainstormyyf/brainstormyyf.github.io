[{"content":"油猴可以帮你干什么：全网VIP视频，下载全网音乐，右键复制限制解除，百度文库下载……\n一、前提准备：edge浏览器 要下载油猴，那首先不得不提的就是微软2020年发布的新款edge浏览器，edge是真香真香！有了edge再也不用Chrome了。edge浏览器让能登陆微软拓展商店和Chrome拓展商店，可以使用Tampermonkey等等功能丰富的拓展。什么是拓展插件呢，拓展插件就是可以让你个性化定义自己浏览器的工具，让你的浏览器超乎你想象。\nwin10系统的电脑会自带老版edge浏览器，你要把它首先升级到最新版，如果不是win10系统的电脑直接下载最新版edge浏览器就可。升级与下载操作都在edge官方网站上进行即可\n官网上会有这个浏览器的功能介绍，往下翻会有下载或更新入口。下载或更新完成后会在桌面创立一个快捷方式图标\n二、油猴的下载安装 双击桌面图标打开新版edge浏览器后，点击右上角的…，再点击拓展\n我浏览器已经下载了好多插件，所以右侧是满满的，大家的右侧应该是空空如也，点击获取Microsoft Edge拓展即可。\n然后会进入到如下页面\n然后网页下翻找到Tampermonkey\n或者直接搜索Tampermonkey\n点击图标进入后再点击获取\n再点击添加拓展\n成功后浏览器工具栏会出现这个标志\n出现这个图标即是成功安装好了，如果没有出现这个图标的话打开拓展页面，点击右侧开关打开\n这就安装好了脚本管理器，但我们还没有脚本，下一步就是安装相应脚本\n三、脚本的安装使用 一般人会直接给你油猴脚本网站地址去安装相应脚本，但我想先推荐个新建标签的拓展插件，通过这个你可以探索好多好玩有趣的网站\n按同样的方式添加拓展并启用后就可，这个可以自定义你的网址导航主页（要首先关掉电脑管家或杀毒软件的锁定浏览器主页）\n它会推荐很多有用的网址，比如拓展迷等等，也具有十分强大的网址搜索能力，点击右上角的无限符号\n然后搜索油猴脚本，点击打开\n即进入这个网站\n你可以随意查找或搜索自己想要的脚本安装并使用，一般脚本安装页都会有相应脚本的使用方法。我随便点击一个打开，下翻网页即会有使用说明，点击安装此脚本及进入安装页面\n然后点击安装即可\n安装完成后鼠标左键点击油猴图标，点击管理面板，查看相应脚本是否安装成功，是否启用。已启用开关打开即大功告成。\n如果你觉得这上的脚本不能满足你的需求，你也可以自己写脚本来满足自己的特定需求。\n因本人水平有限，只是一点经验之谈，如有错误请多多指教。（懵懂大一计算机学生突发奇想写此博客 ）\n","date":1708002462,"headings":[{"anchor":"一前提准备edge浏览器","title":"一、前提准备：edge浏览器"},{"anchor":"三脚本的安装使用","title":"三、脚本的安装使用"},{"anchor":"二油猴的下载安装","title":"二、油猴的下载安装"}],"kind":"page","lang":"zh-ch","series":["环境配置"],"summary":"","tags":["浏览器"],"title":"油猴脚本管理器的超详细下载安装使用教程——新手必看","url":"/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/%E7%8E%A9%E6%9C%BA%E6%8A%80%E5%B7%A7/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC.html","year":"2024"},{"content":"PyTorch环境搭建（windows版）\n首先确定自己电脑上是否有nvidia的显卡（就是游戏显卡RTX3050，RTX3060\u0026hellip;\u0026hellip;这些，必须是nvidia的显卡）\n如果自己电脑上没有显卡，就配置cpu版的pytorch即可。安装cpu版的pytorch参考步骤1，4，如果自己电脑上有gpu,就安装gpu版的pytorch，参考步骤1，2，3。\n1.Anaconda安装 anaconda是python的包管理器，可以很方便的管理不同项目的python环境，解决不同项目python包的环境冲突问题。\nTIPS：我们做python项目时要养成良好的习惯，不同的python项目要采取不同的python虚拟环境，不同的虚拟环境之间相互隔离，python版本和包均不共用。python虚拟环境的创建和管理常用anaconda。 安装步骤： 1、官网下载安装包：https://www.anaconda.com/distribution/ 2、运行并选择安装路径，等待安装完成。(要记得勾选 Add Anaconda to the system PATH environment variable，是为了将Anaconda添加到环境变量中。是的它显示不建议你这样做，但我建议你这样做，要不然还要自己手动把他添加到环境变量里)\n3、查看是否安装成功，cmd中输入conda回车，是否出现如下信息，有则说明安装成功。\n2.CUDA与CuDNN安装 (1)先检查自己的电脑所支持的CUDA版本是多少。 桌面右键点击进去NVIDIA控制面板，找到左下角的系统信息，点击组件，出现如下界面。\n从NVCUDA.DLL 这一行后面的CUDA 11.4说明我的电脑所支持的最高版本是11.4。\n(2)官网下载相对应的CUDA (https://developer.nvidia.com/cuda-toolkit-archive)\n我所支持的版本是11.4，所以我下载的是红色箭头所标出的那行。点击以后出现如下页面，选择第一个下载即可。\n下载完成后，在所在的文件夹下运行安装即可。 然后查看CUDA是否安装成功： cmd中运行到安装的文件目录下：\n1cd C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.1\\bin 然后执行nvcc -V，查看是否出现如下信息，有则说明CUDA安装成功。\n如果输入nvcc -V 出现错误，考虑是否将Anaconds加入环境变量PATH中。\n(3)安装相对应版本的cuDNN。 进入官网： https://developer.nvidia.com/rdp/cudnn-download 需要注册并登录账号（这个需要一段时间），然后选择相对应的版本下载。\n我的是CUDA11.4，所以我选择的是第一个。等待下载完成后进行解压，得到一个cuda文件夹，进入之后，全选，复制到之前CUDA所安装的文件夹下，有重复的进行替换即可。\n查看cuDNN是否安装成功： 步骤如下：（进入安装的路径）\n出现如下Result = PASS 说明cuDNN安装成功。 可以再接着执行deviceQuery.exe，如果出现Result = PASS 说明CUDA和cuDNN都已经安装成功了。\n3.gpu版Pytorch安装 （1）先配置torch环境。 先打开Anaconda Prompt(anaconda)\n下面我们分析一下anaconda prompt每一条命令行的结构。（base）指的是当前所在的python环境是base环境。C:UsersYYF\u0026gt;指的是当前anaconda prompt所在的文件夹位置，我们要执行相关指令只需要在\u0026gt;后面输入指令，回车运行即可。\n然后我们然后输入\n1conda env list 这条语句会显示出当前已存在的python虚拟环境，如果是刚安装anaconda,应该只有一个base基环境。 下面我们新建立一个python虚拟环境(命名为new)\n1conda create –n new python=3.9.10 -n就相当于参数\u0026ndash;name,上面这条语句也可改为conda create \u0026ndash;name python=3.9.10 (这儿python=xxx可以自己指定python版本，这儿的new是你所创建的虚拟环境的名称，大家可以自己取) 然后激活环境： 在anaconda prompt中输入：\n1conda activate new 此时我们可以看到（）里面已经变为new，说明我们已经进入new这个虚拟环境。\n此时再进行python包的安装就是对这个虚拟环境操作，比如我们 pip install numpy（或者 conda install numpy）,再输入\n1conda list # 显示当前虚拟环境的所有包环境 此时我们看到new这个虚拟环境里面已经有numpy这个包了。\n（2）pytorch的安装\n法一：打开pytorch官网：https://pytorch.org/get-started/locally/（pytorch当前建议版本）或者 https://pytorch.org/get-started/previous-versions/ （pytorch的老版本）找到自己所对应版本的使用conda命令安装即可（会慢一些，但建议新手这样做）。\n法二：进入如下网址：https://download.pytorch.org/whl/torch_stable.html，下载自己所需要的torch和torchvision。 可以按快捷键ctrl+F进行搜索。 （不建议新手这样做）\n（3）等待安装完成。 查看pytorch环境是否安装成功：\n要记得先进入之前创建的环境中，然后依次输入蓝色方格中的代码，没有报错，且最后输出True，则说明pytorch环境安装完成。\n4.cpu版PyTorch安装 （1）先配置torch环境。 先打开Anaconda Prompt(anaconda)\n下面我们分析一下anaconda prompt每一条命令行的结构。（base）指的是当前所在的python环境是base环境。C:UsersYYF\u0026gt;指的是当前anaconda prompt所在的文件夹位置，我们要执行相关指令只需要在\u0026gt;后面输入指令，回车运行即可。\n然后我们然后输入\n1conda env list 这条语句会显示出当前已存在的python虚拟环境，如果是刚安装anaconda,应该只有一个base基环境。 下面我们新建立一个python虚拟环境(命名为new)\n1conda create –n new python=3.9.10 -n就相当于参数\u0026ndash;name,上面这条语句也可改为conda create \u0026ndash;name python=3.9.10 (这儿python=xxx可以自己指定python版本，这儿的new是所创建的虚拟环境的名称) 然后激活环境： 在anaconda prompt中输入：\n1conda activate new 此时我们可以看到（）里面已经变为new，说明我们已经进入new这个虚拟环境。\n此时再进行python包的安装就是对这个虚拟环境操作，比如我们 pip install numpy（或者 conda install numpy）,再输入\n1conda list # 显示当前虚拟环境的所有包环境 此时我们看到new这个虚拟环境里面已经有numpy这个包了。\n（2）pytorch的安装\n打开pytorch官网：https://pytorch.org/get-started/locally/（pytorch当前建议版本）或者 https://pytorch.org/get-started/previous-versions/ （pytorch的老版本）找到自己所对应版本的使用conda命令安装即可（会慢一些，但建议新手这样做）。\n（3）等待安装完成。 查看pytorch环境是否安装成功：\n要记得先进入之前创建的环境中，然后依次输入蓝色方格中的代码，没有报错，则说明pytorch环境安装完成。\n参考资料： 深度学习 | NVIDIA 开发者 浅析三种Anaconda虚拟环境创建方式和第三方包的安装-腾讯云开发者社区-腾讯云 (tencent.com) 《PyTorch深度学习实践》完结合集_哔哩哔哩_bilibili PyTorch\n","date":1707985156,"headings":[{"anchor":"1anaconda安装","title":"1.Anaconda安装"},{"anchor":"1先检查自己的电脑所支持的cuda版本是多少","title":"(1)先检查自己的电脑所支持的CUDA版本是多少。"},{"anchor":"2cuda与cudnn安装","title":"2.CUDA与CuDNN安装"},{"anchor":"2官网下载相对应的cuda","title":"(2)官网下载相对应的CUDA"},{"anchor":"3gpu版pytorch安装","title":"3.gpu版Pytorch安装"},{"anchor":"3安装相对应版本的cudnn","title":"(3)安装相对应版本的cuDNN。"},{"anchor":"4cpu版pytorch安装","title":"4.cpu版PyTorch安装"}],"kind":"page","lang":"zh-ch","series":["环境配置"],"summary":"","tags":["pytorch"],"title":"Pytorch安装教程","url":"/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/python/pytorch%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.html","year":"2024"},{"content":"在使用github等网站时，我们有时会遇到访问不稳定或无法访问的问题。这时，很多人会选择使用代理来解决问题。但挂上代理之后，我们仍然可能会遇到一个新问题：在命令行中进行下载或配置时，网络问题依然存在。比如，使用pip进行软件包的下载和安装（pip install -r requirements.txt），或者使用git进行代码的下载(git clone ,git push)，都可能因为网络问题而受阻。在我确认已经打开了全局代理的情况下，仍然出现了网络问题，这说明使用命令行进行的操作并没有走代理。\n有三种常用方式：\n①永久设置： linux系统下：\n1vim /etc/profile： 2 export http_proxy=\u0026#39;http://代理服务器IP:端口号\u0026#39; 3 export https_proxy=\u0026#39;http://代理服务器IP:端口号\u0026#39; 4source /etc/profile windows系统下：\n在C:\\User\\用户目录下，新建pip文件夹，然后在该文件夹下新建pip.ini文件。填写如下内容：\n1[global] 2index-url = https://pypi.tuna.tsinghua.edu.cn/simple 3proxy = http://XXXX.com:port 4[install] 5trusted-host=pypi.tuna.tsinghua.edu.cn ②临时设置（重连后失效）： 可以直接在此次命令行窗口运行:\n1export http_proxy=\u0026#39;http://代理服务器IP:端口号\u0026#39; 2export https_proxy=\u0026#39;http://代理服务器IP:端口号\u0026#39; 注意：设置之后可能使用ping时还是无法连接外网，但是pip时可以的，因为ping的协议不一样不能使用这个代理\n③单次设置： 直接在pip时设置代理也是可以的：\n1pip install -r requirements.txt --proxy=代理服务器IP:端口号 ","date":1707984496,"headings":[{"anchor":"临时设置重连后失效","title":"②临时设置（重连后失效）："},{"anchor":"单次设置","title":"③单次设置："},{"anchor":"永久设置","title":"①永久设置："}],"kind":"page","lang":"zh-ch","series":["环境配置"],"summary":"","tags":["python"],"title":"Pip设置代理","url":"/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/python/pip%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86.html","year":"2024"},{"content":"anaconda下载地址（官网）：\nFree Download | Anaconda\n一、创建Anaconda虚拟环境 步骤1：打开Anaconda Prompt (终端) 首先，在Windows系统中，通过开始菜单或搜索找到“Anaconda Prompt”，在Mac或Linux系统中，可以在终端中直接操作。\n步骤2：创建虚拟环境 在命令行界面输入以下命令来创建一个新的虚拟环境。这里以创建一个名为 my_project_env，并指定Python版本为3.9.10（请根据实际情况替换）的环境为例：\n1conda create --name my_project_env python=3.9.10 注意：此处——name和—n等效\n解决创建环境时出现的： Collecting package \u0026hellip; failed\n创建环境时，可能会出现以下问题\n问题分析：因为网络问题导致的创建失败\n解决方法：多试几次，仍然失败更换国内镜像源\n找到C盘用户文件夹下的.condarc文件 \\2. 编辑.condarc文件，替换成以下内容，保存，重新打开cmd即可\n1ssl_verify: true 2channels: 3 - http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/win-64/ 4 - http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/win-64 show_channel_urls: true 此方法直接更换成了清华源，速度更快，更稳，通过conda向虚拟环境安装第三方包时，用的也是清华源。\n步骤3：激活虚拟环境 虚拟环境创建完成后，需要激活它以便在该环境中执行后续操作。激活环境的命令如下：\n1conda activate my_project_env 当你成功激活虚拟环境后，命令行提示符前通常会显示当前活动环境的名称，例如 (my_project_env)。\n查看所有虚拟环境的命令：\n1conda env list 二、在虚拟环境中安装第三方包 方法1：使用Conda安装 对于那些在Conda仓库中存在的包，你可以直接用 conda install 命令进行安装。例如，要安装numpy库：\n1conda install numpy 方法2：使用pip安装 对于Conda仓库中没有或者你想从PyPI获取的包，可以使用 pip 在虚拟环境中安装：\n1pip install pandas pip安装速度过慢时，可以将pip更换为国内镜像源：\n安装特定版本的包 如果需要安装特定版本的第三方包，只需在包名后面加上版本号即可：\n1conda install scipy=1.7.3 # 使用conda安装Scipy的1.7.3版本 2pip install tensorflow==2.8.0 # 使用pip安装TensorFlow的2.8.0版本 三、检查已安装的包 安装完成后，可以通过下面的命令查看虚拟环境中已经安装的所有包及其版本信息：\n1conda list 或者使用pip列出所有已安装的pip包：\n1pip list 四、关闭/退出虚拟环境 当完成工作并希望回到系统默认Python环境时，执行以下命令：\n1conda deactivate 至此，您已成功地使用Anaconda创建了一个虚拟环境，并在其中安装了所需的第三方包。这种做法有助于保持项目之间的依赖独立，使得代码更易于管理和部署。\n五、删除虚拟环境 当某个项目完成或者不再需要某个虚拟环境时，可以使用以下命令将其彻底删除：\n1conda remove --name my_project_env --all 这里的 my_project_env 是你想要删除的虚拟环境名称。执行上述命令后，Anaconda将会从系统中移除该虚拟环境及其所有安装的包和配置文件。\n注意事项：\n删除操作不可逆，请在执行此命令前确保您确实不再需要该虚拟环境中的任何内容。 确认环境名称无误，避免误删其他正在使用的虚拟环境。 请根据实际需求和最新版Anaconda的更新情况调整上述命令中的具体版本信息。\n","date":1707845958,"headings":[{"anchor":"一创建anaconda虚拟环境","title":"一、创建Anaconda虚拟环境"},{"anchor":"三检查已安装的包","title":"三、检查已安装的包"},{"anchor":"二在虚拟环境中安装第三方包","title":"二、在虚拟环境中安装第三方包"},{"anchor":"五删除虚拟环境","title":"五、删除虚拟环境"},{"anchor":"四关闭退出虚拟环境","title":"四、关闭/退出虚拟环境"},{"anchor":"安装特定版本的包","title":"安装特定版本的包"},{"anchor":"方法1使用conda安装","title":"方法1：使用Conda安装"},{"anchor":"方法2使用pip安装","title":"方法2：使用pip安装"},{"anchor":"步骤1打开anaconda-prompt-终端","title":"步骤1：打开Anaconda Prompt (终端)"},{"anchor":"步骤2创建虚拟环境","title":"步骤2：创建虚拟环境"},{"anchor":"步骤3激活虚拟环境","title":"步骤3：激活虚拟环境"}],"kind":"page","lang":"zh-ch","series":["环境配置"],"summary":"","tags":["python"],"title":"使用Anaconda管理python虚拟环境与安装第三方包","url":"/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/python/%E4%BD%BF%E7%94%A8anaconda%E8%BD%BB%E6%9D%BE%E7%AE%A1%E7%90%86python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E4%B8%8E%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8C%85.html","year":"2024"},{"content":"1.临时换源： 清华源\n1pip install xxxx -i https://pypi.tuna.tsinghua.edu.cn/simple 阿里源\n1pip install xxxx -i https://mirrors.aliyun.com/pypi/simple/ 腾讯源\n1pip install xxxx -i http://mirrors.cloud.tencent.com/pypi/simple 豆瓣源\n1pip install xxxx -i http://pypi.douban.com/simple/ 将xxxx换成需要安装的包的名字\n2.永久换源： 清华源\n1pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 阿里源\n1pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ 腾讯源\n1pip config set global.index-url http://mirrors.cloud.tencent.com/pypi/simple 豆瓣源\n1pip config set global.index-url http://pypi.douban.com/simple/ 3.换回默认源 1pip config unset global.index-url ","date":1707844801,"headings":[{"anchor":"1临时换源","title":"1.临时换源："},{"anchor":"2永久换源","title":"2.永久换源："},{"anchor":"3换回默认源","title":"3.换回默认源"}],"kind":"page","lang":"zh-ch","series":["环境配置"],"summary":"","tags":["python"],"title":"pip修改国内镜像源（临时/永久）","url":"/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/python/pip%E6%8D%A2%E6%BA%90.html","year":"2024"}]